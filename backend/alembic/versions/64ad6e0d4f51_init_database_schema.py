"""Init Database Schema

Revision ID: 64ad6e0d4f51
Revises: 
Create Date: 2024-12-17 20:45:19.157523

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '64ad6e0d4f51'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('sessions',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_table('sql_queries',
    sa.Column('sqlquery', sa.String(), nullable=False),
    sa.Column('database_used', sa.String(), nullable=True),
    sa.Column('sqid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('sqid')
    )
    op.create_table('execution_logs',
    sa.Column('status', sa.Enum('SUCCESS', 'FAILED', 'PENDING', 'RUNNING', native_enum=False), nullable=False),
    sa.Column('query_id', sa.String(), nullable=False),
    sa.Column('executed_by', sa.String(), nullable=False),
    sa.Column('notify_to', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('logs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['executed_by'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['query_id'], ['sql_queries.sqid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('execution_results',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('execution_id', sa.Integer(), nullable=False),
    sa.Column('result', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['execution_id'], ['execution_logs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('turns',
    sa.Column('nlq', sa.String(), nullable=False),
    sa.Column('execution_log_id', sa.Integer(), nullable=False),
    sa.Column('database_used', sa.Text(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('turn_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['execution_log_id'], ['execution_logs.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.session_id'], ),
    sa.PrimaryKeyConstraint('turn_id')
    )
    op.create_table('saved_queries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('sqid', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('turn_id', sa.Integer(), nullable=True),
    sa.Column('saved_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['saved_by'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['sqid'], ['sql_queries.sqid'], ),
    sa.ForeignKeyConstraint(['turn_id'], ['turns.turn_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('saved_queries')
    op.drop_table('turns')
    op.drop_table('execution_results')
    op.drop_table('execution_logs')
    op.drop_table('sql_queries')
    op.drop_table('sessions')
    op.drop_table('users')
    # ### end Alembic commands ###
